Angular InterView Question
1. Differenct between angular js and angular ?
-->
               AngularJs    Angular
Language      Javascript    Typescript
Architecture  Controller    Compenent
Mobile Complient No          yes
CLI             No           yes
Lazy loading     no          yes
SEO              no           yes
Server side      no          yes

2. What are directives in angular ? 
--> Directives changes the behavior of HTML DOM

Like : - [(ngModel)],[hidden] like this 

3.what are the different  types of angular directives?
--> SAC

Structural Directive : - Changes the DOM layout by adding and removing elements E g :- *ngIf *ngFor
Attribute directive : - attribute directive  do not change structure of DOM rather than change the behaviour of HTML like colour, look and feel and hide an false, Changes the appearance and behaviour of HTML Elements. Eg : - [Hidden] 
Component directive : - Directive with templates it's like a user control.which has own UI and own code 

4. Explain the importance of NPM and Node_Modules folder?

--> NPM is a Package manager which make installation of javascript framework easy.
    node_module is the folder where all the packages are intalled.

    Eg : Installation of jQuery package
    command line : - NPM install jquery

5. Explain the importance of package.json file in Angular ?
--> it has all the javascript reference needed for a project. so rather than installing one packages at a time we can install app packages in one go.

6. what is typescript and why do we need it?

--> typescript superset of javascript. it added type casting added to javascript.
    it's provided Object oriented programming environment which converts to javascript.


7. what is Angular CLI ? 
--> angular CLI is a command line inteface by which we can create intial angular project templete

   Command line : - ng new myapp using CLI we create project structure of application.

8. Explain the importance of compenent and modules ?
--> Componet is where you write  your binding code. Module logically groups components.

9. what is a decorator in angular ?
--> Decorator defines what kind of Angular class is it. for example if you decorate "@Component" then it says it's an angular component,if you put "@NgModule" it becomes a Angular Module.

11. What are Annotation or MetaData?

--> same of decorator concepts

12. What is a template?

--> Template is an HTML View of Angular in which we can write directies.

There are two way of defining Template one is lnline and other is a seprate HTML file.

templateUrl : it's is a Link to HTML 

template : it's is inline templete in @Compenent Directive

13. Expain the for types of data binding in Angular?

--> it's a communication between View with Component.

1.string Expression/interpolation {{}} :- Data flows from componet to the View and we can mix the same with HTML tags. ( syntex : - {{CustomerObj.CustmerId}})


2.propety binding [] : - Data flow from component to the view. ( squere bracket  syntex : -  [])

3.Event binding (): - when you want to sent event from the view to the component. ( parentheses or round brackets syntex : -  (click) )

4.two way binding [()]:- Data flows from Component to the view and vice versa :- syntex [(ngmodel)]

14. Explain architecture of angular?

--> Template --> Template(View) --> Component --> Module( is a group of component) 

Service (it's is injected to Constructer (dependacy injection) service inside write a common logic of application)


15. What is SPA (single page application) in Angular ?
--> SPA stands for single page application.

 single page application are applications where the main UI gets loaded once and then the needed UI is loaded on demand.


16. How to Implement SPA in Angular?

--> Routing is a simple collection which has two thing URL and when this URL is called which component to load.

so Routing help you to define the navigation for your angular application. so if you want to move from one screen to other screen and you want to respect SPA That means not loading and refreshing the whole UI Routing is needed.

17. How to implement routing in angular?

--> route module inside define collection of route string and component mapping 

[routerLink] = "['Home']" when click on button we use routerLink attribute directive

<router-outlet><router-outlet> load on html

this.route.navigate([/Home']);

18. what is Lazy Loading?

--> Lazy loading means on demand loading.
    Loading only the necessay HTML,CSS and JavaScript files so that you have better performance.


19. How to implement Lazy loading in Angular?

--> Divide your project in to modules.

Use "loadhildren" to load Module (use in Route module)

20. what are Services in Angular ?

---> Service help you to share common logic across angular projects.

21. what is Depedency Injection?

--> Dependency injection is an application design pattern where rather then creating object instances from within the component. Angular injects it via the constructor.

22. how to implement Dependecy injection?
--> Dependency injection is an application design pattern where rather than creating object instances from within the component. Angular injects it via constructor.

23. what the benefit of dependency Injection?
--> Dependency injection help to decouple class dependenies. so that whenn you add new dependencies you do not have change everywhere.

24. Diferentiate between ng serve and ng build?
--> "ng serve" build in memory while "ng build" builds on the hard disk. so when you want to go for production "ng build" command is used.

25. what are difference between Authentication and Authorization?
--> 

      Authentication: - proving who you are, often through a username and password or other credentials.

      Authorization:- determining what you are allowed to do or access based on your identity,roles,and permissions after you've been authenticated.

26. how would you implement authentication and authorization in an angular application?
--> There are different approaches to implemention authentication and authorization in an angular application, but here's a high-level overview of a common approach:

1.Use a backend service or identity provider to handle user authentication and provide access tokens.

2.store the access token in a secure way. such as using HTTP-only cookies or local storage and session storage.

3.Create an angular HTTP interceptor that automatically add the access token to outgoing requests.

4.Create an authentication service that provides methods for login,logout,and checking the current user's authentication status.
  this services should also handle refereshing the access token when it exprires.

27. what is NgModule?
--> 
NgModule is a core building block in angular application that is used to organize and configure the application. 
NgModule is essentially a container that group together related components,directive, pipes and services, and provides a compilation context for the application.
the purpose of the NgModule is to provide a way to organize and modularize the application into smaller, more manageable pieces. by breaking the application down into smaller modules,it becomes easier to maintain and scale,and it is also possible to selectively load different parts of the application depending on the user's needs.
In an NgModule, developers can define a set of providers which are essentiaaly the services that are used within the module.
the NgModule can also define the components,directives and pipes that are associated with the module.
one of the main benefits of using NgModules that they enable lazy loading of application functionality.by splitting the application into smaller modules, the application can be loaded more quickly and efficiently,as only the modules that are needed at any given time are loaded.

28.In an angular applicaton, there are various way to handle errors. here are some common approaches:
--> 

1. Error Handling Service : -
                            Create a service that handles errors and displays them to the user in a user-frienly way.
                            This services can be used to catch and handle errors globally across the application.

2.Observable Error Handling :- 
                             when using observables. you can use the 'catchError' operator to catch and handle errors.
                             this can be useful when making HTTP requests or working with other asynchronous operations.



29.What are Componenets in Angular?
--> Componenets are the most basic UI building block of an Angular app.

30. what is a selector and Template?
--> A selector is used to identify each component uniquely into the component tree.

31. what is Module in Angular? what is app.module.ts file?

--> Module is a place where you can group the components,directives,pipes, and services, which are related to the application.


32.How an angular app gets loaded and started? what are index.html,app-root,selector and main.ts?
-->
     Index.html --> Angular is used to create single page application.index.html file is that single page.Index.html will invoke main.js file which is the javascript version of main.ts file.
     
     Main.ts    --> Main.ts file is like the entry point of web-app.it compiles the web-app and boostraps the application the AppModule to run in the browser.

     app.module.ts --> App module file will then boostrap the Appcomponent.

     App-component --> App-component or app-root component is the html which you will see finally.

33.what are pipes? what are the type of Pipes & parameterized Pipes?
--> Pipes are simple functions which accept an input value and return a transformed value 


    two type of Angular Pipe

     Built in pipe :- Lowercase
                      Uppercase
                      date
                      Percentage
                      currency
                      decimal
                      slice 
                      json
       
       Custom pipe : -



34. what are lifcycle hooks in angular?
--> A component from creation to destruction goes through several stages and these stages are the life cycle hooks.

The stages will cover activities like:

           construction --> It is default method of the typescript class that is executed when the class is instatiated. it always run before any anguar hook and it is not a part of lifecycle hooks.
            ngOnChanges --> Called when input property changes
            ngOnInit    --> Called when the component  is creatd.
            ngOnChanges --> Called for component children.
                ngAfterContentinit    - called for component children.
                ngAfterContentChecked - called for component children.  - called when the component is destroyed.
                ngAfterViewlinit      - called for component children.  - called when the component is destroyed.
                ngAfterViewChecked    - called for component children.  - called when the component is destroyed.
            ngOnDestory  - called when the component is destroyed.



     -- Compoenent Instantialing.
     -- Rendering the component html view.
     -- Destroying the component.

35.what is constructor in angular?
--> the constructor is a method in TypeScript class that automatically get called when the class is being instantiated.

constructor always run before any angular hook and it is not a part of lifecycle hooks.

constructor is widely used to inject dependencies(services) into the component class.


36. what is Decorator?
--> Angular decorators store metadata about a class, method , or property.

 metadata is "Data that provide information about other data".

 All Decorators are represent with @ symbol.

37.what are the type of Decorator?
-->
            
   Types of Decorators  :- class decorators
                           @NgModule
                           @Component
                           @Injectable 
                           @Directive
                           @Pipe

    Proprty Decorators   :- @input
                            @Output
                             
                            @ContentChild
                            @ContentChildren
                            @ViewChild
                            @ViewChildren
                            @HostBinding

    Method Decorators     :- @HostListner

    Parameter Decorators   :- @Inject
                              @Self

38.what is the differene between Promise and observable?
--> 
 
        Observable : - 1.Emit multiple values over a periodof time also called streaming of data.
                       2. Are lazy :- they're not executed until we subscribe to them using the subscribe() method.
                       3. Have sebscription that are cancellable using the Unsubscribe() method.

        Promise :- 1. emit a single value at a time
                   2. Are not lazy executed immediately after creation.
                   3. are not cancellable.

39. what is observable ? How to implement observable?
--> Observables are used to stream data to multiple component.

      It's a 3 step process:-

                          1.import observable from RxJS Library.
                          2.create Observable & Emit Data.
                          3.finally subcribe the data.


40. How to pass headers in Angular Services?
--> 

     1.Directly we can pass headers through services.
     2.through http Inerceptor we can pass header globally for all requests.

41. what is HTTP INTERCEPTOR?
--> 

     1.HTTP Interceptor that can be used to perform various tasks related to HTTP request and response.

     2. such as adding headers, handling errors, modifying the request or response data logging,authentication. etc.

42. what is form?

--> angular form used to handle the User input such as validation. value assigning and getting.

    There are two types of forms
    1.Template deriven form
    2.Reactive form

43.What is Template Drivan froms?

--> A template-driven form is the simplest way to build a form in angular.

    It uses Angular's two-way data-binding directive (ngModel) to create and manage the underlying form instance.additionally

44. what is Reactive Forms ?
--> Reactive forms provides access to information about a given control through properties and method provided with each instance.

    Reactive forms, also known as model-driven forms.

    Reactive form are based on reactive programming principles and allow you to manage form state and validation programmatically.

45. What is formgroup formcontrol & formarray?
--> 
    Form Group : A formgroup instance provides it's model value as an object reduced from the values of each control in the group.

    Form Control :- Form controls are classes that can hold both the data values and the validation information of any form element.

    FormArray : - Angular's FormArray is a powerful tool for managin dyamic form in your angular application.

46.What is Form Builder?
--> the  formbuilder provides synstactic sugar that shortens creating instances of FormControl.FormGroup or Form array.

It reduces the amount of boilerplate needed to build complex form.

47. What is validators class?
--> a validator is a function that processes a formControl or collection of control and returns an error map or null.A null map means that validation has passed.

48.what is strong typed forms?
--> The addition of strong types in angular form allows us to write code faster and with fewer bugs.Additionally.the editor can now provide us with type-ahead suggestions for our's form's value property.

   This feature introducted in angular 14.

49. how to get the value n disabled Reactive forms?

-- Using getRawValue();

50. State Management Options in angular?
--> component state
    RxJs
    Services
    NGRX

51.How to pass data from one component to another?
--> Method 1 : Parent to child via @Input decorator.
    Method 2 : child to parent via @Output decorator and EventEmitter.
    Method 3 : child to parent via @ViewChild decorator.
    Method 4 : Unrelated components via a service & NGRX.

52. what is singles in angular?
--> 
 
    1.Signals are introduced in angular 16 
    2. A signal is a wrapper around a value that can notify interested consumers when that value changes.
    3.Signals can contain any value, from simple primtives to complex data structures.
    4.it's also used for state management.
    5.Singals using RXJS operators.

53. what stand alone template?

--> In angular 17's standalone template not having default app.module

     also components are default stand alone.

     we can manage provides from app.config

54. what is RXJS?

--> RxJS(Reactive Extensions for javascript) is a library for reactive programming using observable that makes it easier to compose asynchronous or callback-base code.

55.what is OBSERVABLE?

--> RxJS introduces Observables, a new Push system for javascript.an observable is a producer of multiple values, "Pushing" them to Observers(consumers).

    A function is lazily evaluted computation that syschronously returns a single value on invocation.


56. What is provider in angular?
--> Providers are classes that create and manage service objects the first time that Angular need to resolve a dependency.

Providers is used to register the classes to an angular moduleasa service. and then. this service classes can be used by other components during the itself creation phase in the module

57. what is difference between Component,Attribute and structural directives?

--> Component Directive :- component directive is responsible for showing the firs whole view it is the most used one.
                            Start with @ sign like @Component

    Structural Directive :- Structural directive responsible for adding and deleting html elements in the view.
                             Starts with * sign 
                             like : *nglf ,*ngfor,*ngswitch

    Attribute Directive :- Attribute directive is responsiblefor changing  the appearance of view by adding or removing style/cssclasses of the html elements.
                            set insides square brackets.
                            like [ngClass],[ngStyle]





    





